---
- hosts: nodes
  become: true
  become_method: sudo
  vars: 
    AWS_ACCESS_KEY_ID:
    POSTGRES_HOST:
    POSTGRES_NAME: 
    POSTGRES_PASSWORD: 
    AWS_SECRET_ACCESS_KEY:

  tasks:
    - name: Install git
      yum:
        name: git
        state: present
        update_cache: yes

    - name: install docker
      yum:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
       # - ca-certificates
        - docker   

    - name: start and enable docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add docker user to a super user
      command: usermod -aG docker $USER

    - name: restart docker
      service: 
        name: docker 
        state: restarted
 

    # - name: Install Docker Module for Python
    #   pip:
    #     name: docker 

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python-pip
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - amazon-linux-extras

    - name: Add extras repository
      shell: yum-config-manager --enable extras

    # - name: Enable Some packages from amazon-linux-extras packages
    #   shell: "amazon-linux-extras enable python3.8 ansible2 docker"

    - name: clean yum metadata cache
      command: yum clean metadata
      args:
        warn: false

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python3.8
        - ansible
        - docker

    - name: Enable Docker CE service at startup
      service:
        name: docker
        state: started
        enabled: yes

    - name: Upgrade pip3
      shell: "python3.8 -m pip install pip --upgrade"

    - name: Ensure Python pip packages are installed
      pip:
        name: "{{ packages }}"
        executable: /usr/local/bin/pip3.8
      vars:
        packages:
        - boto
        - boto3
        - docker-compose

    - name: docker pull
      ansible.builtin.command: docker pull kitskat/hr-app:v3

    - name: list content of working directory
      ansible.builtin.command: pwd && ls


    # - name:  echo docker command 
    #   ansible.builtin.command: echo "docker run -d -p 80:5000 -e POSTGRES_HOST={{POSTGRES_HOST}} -e POSTGRES_USER=kitskatrds -e POSTGRES_PASSWORD={{POSTGRES_PASSWORD}} -e POSTGRES_DATABASE_NAME=postgres -e TO_ADDRESS=kay.tijani@gmail.com  -e SOURCE_ADDRESS=k.tijani0@hotmail.com -e AWS_REGION_NAME=eu-west-1 -e AWS_ACCESS_KEY_ID={{AWS_ACCESS_KEY_ID}} -e AWS_SECRET_ACCESS_KEY={{AWS_SECRET_ACCESS_KEY}} kitskat/hr-app:v3

    - name: running HRAPP docker instance
      ansible.builtin.command: docker run -d -p 80:5000 -e POSTGRES_HOST=hr-app-project.cku7q07sw3mp.eu-west-1.rds.amazonaws.com -e POSTGRES_USER=kitskatrds -e POSTGRES_PASSWORD="{{POSTGRES_PASSWORD}}" -e POSTGRES_DATABASE_NAME=postgres -e TO_ADDRESS=kay.tijani@gmail.com  -e SOURCE_ADDRESS=k.tijani0@hotmail.com -e AWS_REGION_NAME="eu-west-1" -e AWS_ACCESS_KEY_ID="{{AWS_ACCESS_KEY_ID}}" -e AWS_SECRET_ACCESS_KEY="{{AWS_SECRET_ACCESS_KEY}}" kitskat/hr-app:v3
      #ansible.builtin.command: docker run -d -p 80:5000 -e POSTGRES_HOST=project.cuzbrlyt8tuq.eu-west-1.rds.amazonaws.com -e POSTGRES_USER=hr_project -e POSTGRES_PASSWORD="{{POSTGRES_PASSWORD}}" -e POSTGRES_DATABASE_NAME=postgres -e TO_ADDRESS=mzmazy100@gmail.com  -e SOURCE_ADDRESS=mzmazy100@gmail.com -e AWS_REGION_NAME="eu-west-1" -e AWS_KEY_NAME="{{AWS_KEY_NAME}}" -e AWS_ACCESS_NAME="{{AWS_ACCESS_NAME}}" test1:latest