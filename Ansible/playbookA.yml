---
- hosts: monitoring-machine
  become: yes
  become_user: root
  become_method: sudo
  roles:
    - alertmanager

- hosts: Nodes
  become: yes
  become_user: root
  become_method: sudo
  roles:
    - prometheus_node_exporter

- hosts: monitoring-machine
  become: yes
  become_user: root
  become_method: sudo
  roles:
    - prometheus_node_exporter    

- hosts: monitoring-machine
  become: yes
  become_user: root
  become_method: sudo
  roles:
    - prometheus

# - hosts: monitoring-machine
#   become: yes
#   become_user: root
#   become_method: sudo
#   roles:
#     - grafana

  - name: Install Grafana Agent
  hosts: monitoring-machine
  become: true

  vars:
    grafana_cloud_api_key: <Your Cloud Access Policy token> # Example - glc_eyJrIjoiYjI3NjI5MGQxZTcyOTIxYTc0MDgzMGVhNDhlODNhYzA5OTk2Y2U5YiIsIm4iOiJhbnNpYmxldGVzdCIsImlkIjo2NTI5
    logs_username: <loki-username> # Example - 411478
    loki_url: <loki-push-url> # Example - https://logs-prod-017.grafana.net/loki/api/v1/push
  tasks:
  - name: Install Grafana Agent
      ansible.builtin.include_role:
        name: grafana_agent
      vars:
       grafana_agent_logs_config:
        configs:
          - clients:
          - basic_auth:
            password: '{{ grafana_cloud_api_key }}'
            username: '{{ logs_username }}'
            url: '{{ loki_url }}'
      name: default
        positions:
        filename: /tmp/positions.yaml
        scrape_configs:
  - job_name: integrations/node_exporter_direct_scrape
          static_configs:
          - targets:
              - monitoring-machine
                      labels:
                        instance: hostname
                        __path__: /var/log/*.log
                        job: integrations/node_exporter
              target_config:
                sync_period: 10s